task wrapper(type: Wrapper) {
}
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'
    }
}
apply plugin: 'android'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    // Google Play Services
    compile 'com.google.android.gms:play-services:4.0.30'

    // Support Libraries
    compile 'com.android.support:support-v4:19.0.0'
    compile 'com.android.support:appcompat-v7:19.0.0'
    //compile 'com.android.support:gridlayout-v7:19.0.0'
    //compile 'com.android.support:support-v7-mediarouter:19.0.0'
    //compile 'com.android.support:support-v13:19.0.0'

    // Note: these libraries require the "Google Repository" and "Android Repository"
    //       to be installed via the SDK manager.
}

android {
    compileSdkVersion 18
    buildToolsVersion "18.0.1"

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    Properties localprops = new Properties();
    localprops.load(new FileInputStream(file("local.properties")))
    signingConfigs {
        release {
            storeFile file(localprops["key.store"])
            storePassword localprops["store.pass"]
            keyAlias localprops["key.alias"]
            keyPassword localprops["key.pass"]

        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}
